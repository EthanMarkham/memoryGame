{"version":3,"sources":["components/login/login.jsx"],"names":["Login","props","dispatch","useState","user","setUser","password","setPassword","action","setAction","className","onSubmit","event","preventDefault","login","username","then","data","type","payload","catch","e","htmlFor","id","placeholder","onChange","target","value","class","onClick","disabled","length","block"],"mappings":"2JA8EeA,UA3Ef,SAAeC,GAAQ,IACZC,EAAYD,EAAZC,SADW,EAEMC,mBAAS,IAFf,mBAEXC,EAFW,KAELC,EAFK,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,OAIUJ,mBAAS,SAJnB,mBAIXK,EAJW,KAIHC,EAJG,KAuBlB,OACI,qBAAKC,UAAU,iBAAf,SACI,uBAAMC,SAdd,SAAsBC,GAClBA,EAAMC,iBAENC,YAAM,CAACC,SAAUX,EAAME,SAAUA,GAAWE,GAAQQ,MAAK,SAAAC,GAAI,OAAIf,EAAS,CAAEgB,KAAM,QAASC,QAASF,OACnGG,OAAM,SAAAC,GAAC,OAAInB,EAAS,CAACgB,KAAM,QAASC,QAASE,QAU1C,UACI,sBAAKX,UAAU,YAAf,UACI,uBAAOY,QAAQ,WAAf,sBACA,uBACIJ,KAAK,OACLR,UAAU,eACVa,GAAG,WACHC,YAAY,aACZC,SAAU,SAACb,GAAYP,EAAQO,EAAMc,OAAOC,QAC5CA,MAAOvB,IAEX,uBAAOM,UAAU,kCAAjB,iCACA,wBAAOA,UAAU,kCAAjB,4BAAkE,6CAEtE,sBAAKkB,MAAM,YAAX,UACI,uBAAON,QAAQ,WAAf,sBACA,uBACIJ,KAAK,WACLR,UAAU,eACVa,GAAG,WACHC,YAAY,WACZC,SAAU,SAACb,GAAYL,EAAYK,EAAMc,OAAOC,QAChDA,MAAOrB,IAEX,uBAAOI,UAAU,kCAAjB,oCAEJ,uBACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBACIQ,KAAK,SACLR,UAAU,4BACVmB,QAAS,WArC7BpB,EAD6B,UAAXD,EAAsB,WAAa,UAmCrC,SAGmD,UAAXA,EAAqB,mBAAqB,uBAGtF,qBAAKE,UAAU,QAAf,SACI,wBACIA,UAAU,kBACVQ,KAAK,SACLY,cAzDf1B,IAASE,IACFF,EAAK2B,OAAS,GAAKzB,EAASyB,OAAS,GAyD7BC,OAAK,EAJT,SAMgB,UAAXxB,EAAqB,QAAU","file":"static/js/5.3eb8c3c8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { login } from '../../helpers/helpers'\r\n\r\nfunction Login(props) {\r\n    const {dispatch} = props\r\n    const [user, setUser] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [action, setAction] = useState(\"Login\")\r\n\r\n    const validateForm = () => {\r\n        if (!user && !password) return false\r\n        else return user.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        //instead of strings we just use bool for action. if true we want to login, if false we want to register\r\n        login({username: user, password: password}, action).then(data => dispatch({ type: \"LOGIN\", payload: data }))\r\n        .catch(e => dispatch({type: \"ERROR\", payload: e}))\r\n    }\r\n\r\n    function toggleMethod() {\r\n        let nextAction = (action === 'login') ? 'register' : 'login'\r\n        setAction(nextAction)\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"formGroup\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"username\"\r\n                        placeholder=\"Enter user\"\r\n                        onChange={(event) => { setUser(event.target.value) }}\r\n                        value={user}\r\n                    />\r\n                    <small className=\"text-muted form-text text-muted\">Min. Requirement: 4</small>\r\n                    <small className=\"text-muted form-text text-muted\">Appropriate or <b>BANNED</b></small>\r\n                </div>\r\n                <div class=\"formGroup\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={(event) => { setPassword(event.target.value) }}\r\n                        value={password}\r\n                    />\r\n                    <small className=\"text-muted form-text text-muted\">Min. Requirement: 4</small>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-secondary\"\r\n                            onClick={() => { toggleMethod() }}>{action === 'login' ? \"Need an Account?\" : \"Have an Account?\"}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            type=\"submit\"\r\n                            disabled={!validateForm()}\r\n                            block\r\n                        >\r\n                            {action === 'login' ? \"Login\" : \"Register\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Login"],"sourceRoot":""}