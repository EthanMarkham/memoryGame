{"version":3,"sources":["components/pre_game/pre_game.js"],"names":["GameInfo","props","className","onClick","joinGame","game","id","name","players","maxPlayers","PreGame","useState","games","setGames","gameName","setGameName","playerCount","setPlayerCount","cardCount","setCardCount","action","setAction","socket","useContext","SocketContext","useEffect","mounted","emit","on","data","off","onSubmit","e","preventDefault","htmlFor","type","placeholder","onChange","event","target","value","disabled","length","map","g"],"mappings":"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","file":"static/js/6.606b4623.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SocketContext } from '../../context/socket';\r\n\r\nfunction PreGame(props) {\r\n    const [games, setGames] = useState([]);\r\n    const [gameName, setGameName] = useState(\"\");\r\n    const [playerCount, setPlayerCount] = useState(1);\r\n    const [cardCount, setCardCount] = useState(48);\r\n    const [action, setAction] = useState(1); //1 for Joining OR 0 for Creating\r\n    const socket = useContext(SocketContext);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) socket.emit(\"JOIN_GAME_LIST\"); //join socket room\r\n        if (mounted) socket.emit(\"GET_GAME_LIST\");   //ask for open games\r\n        socket.on(\"GAME_LIST\", data => {if (mounted) setGames(data); });\r\n\r\n        return (() => {\r\n            socket.emit(\"LEAVE_GAME_LIST\");\r\n            socket.off(\"GAME_LIST\", data => {if (mounted) setGames(data); });\r\n            mounted = false;\r\n        })\r\n    }, []);\r\n\r\n    const joinGame = id => socket.emit(\"JOIN_GAME\", id)\r\n    const handleNewGameSubmit = e => {\r\n        e.preventDefault()\r\n        socket.emit(\"ADD_GAME\", { playerCount: playerCount, cardCount: cardCount, name: gameName })\r\n    }\r\n\r\nreturn (\r\n    <>\r\n        {(action === 0) ?\r\n            <div className=\"container\">\r\n                <form onSubmit={handleNewGameSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input type=\"text\" id=\"name\" className=\"form-control\" placeholder=\"Enter Lobby Name\" onChange={(event) => { setGameName(event.target.value) }} value={gameName} />\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"playerCount\">Number of Players</label>\r\n                            <select id=\"inputState\" className=\"form-control\" onChange={(event) => { setPlayerCount(event.target.value) }} value={playerCount} >\r\n                                <option value={1}>1</option>\r\n                                <option value={2}>2</option>\r\n                                <option value={3}>3</option>\r\n                                <option value={4}>4</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"cardCount\">Difficulty</label>\r\n                            <select id=\"inputState\" className=\"form-control\" onChange={(event) => { setCardCount(event.target.value) }} value={cardCount} >\r\n                                <option value={16}>easy</option>\r\n                                <option value={48}>medium</option>\r\n                                <option value={72}>hard</option>\r\n                                <option value={4}>get out of here</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"><button className=\"btn-lg btn-block btn-secondary\" onClick={() => setAction(1)} type=\"button\">Join Game</button></div>\r\n                        <div className=\"col\"><button className=\"btn-lg btn-block btn-primary\" type=\"submit\" disabled={gameName === \"\"}>Create Game</button></div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            :\r\n            <div className=\"container\">\r\n                <div className=\"gameList\">\r\n                    <h2>{games.length} games found!</h2>\r\n                    {games.map(g => <GameInfo game={g} key={g.id} joinGame={joinGame} />)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\"><button className=\"btn btn-primary btn-large btn-block\" onClick={() => setAction(0)} >New Game</button></div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </>\r\n)\r\n}\r\n\r\nconst GameInfo = (props) => {\r\n    return (\r\n        <button className=\"row gameList\" onClick={() => { props.joinGame(props.game.id) }}>\r\n            <div className=\"col-8\"><h3>{props.game.name}</h3></div>\r\n            <div className=\"col-4\">\r\n                <div className=\"gameStats\">\r\n                    <div className=\"stat\">Players: {props.game.players}</div>\r\n                    <div className=\"stat\">Out of: {props.game.maxPlayers}</div>\r\n                </div>\r\n            </div>\r\n        </button>)\r\n}\r\nexport default PreGame;\r\n"],"sourceRoot":""}